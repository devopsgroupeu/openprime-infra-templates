# -------------------------------------------------------------------
# GLOBAL
# -------------------------------------------------------------------

variable "region" {
  type        = string
  description = "The AWS region, where networking infrastructure will be created (e.g. 'eu-west-1')"
  default     = "eu-west-1"
}

variable "global_prefix" {
  type        = string
  description = "Global prefix to be used in almost every resource name created by this code"
  default     = ""
}

variable "environment" {
  description = "Name of the environment"
  type        = string
  default     = "development"
}

variable "environment_short" {
  description = "Short name of the environment (e.g., dev)"
  type        = string
  default     = "dev"
}


variable "global_tags" {
  type        = map(string)
  description = "Global tags to be used in almost every resource created by this code"
  default     = {}
}

# -------------------------------------------------------------------
# VPC
# -------------------------------------------------------------------

variable "vpc_cidr" {
  description = "The CIDR block for the VPC"
  type        = string
  default     = "10.0.0.0/16"
}

variable "az_count" {
  description = "Number of availability zones to select"
  type        = number
  default     = 2
}

variable "nat_gateway_strategy" {
  description = "Strategy for creating NAT gateways. Available options are `NO_NAT`, `SINGLE`, `ONE_PER_SUBNET` or `ONE_PER_AZ`. Default is `ONE_PER_SUBNET`"
  type        = string
  default     = "SINGLE"

  validation {
    condition = can(index([
      "NO_NAT",
      "SINGLE",
      "ONE_PER_SUBNET",
      "ONE_PER_AZ"
    ], var.nat_gateway_strategy) >= 0)

    error_message = "Value of 'nat_gateway_strategy' must be on of `NO_NAT`, `SINGLE`, `ONE_PER_SUBNET` or `ONE_PER_AZ` option"
  }
}

variable "public_subnet_tags" {
  description = "Additional tags for the public subnets"
  type        = map(string)
  default     = {}
}

variable "private_subnet_tags" {
  description = "Additional tags for the private subnets"
  type        = map(string)
  default     = {}
}

variable "database_subnet_tags" {
  description = "Additional tags for the database subnets"
  type        = map(string)
  default     = {}
}

# -------------------------------------------------------------------
# EKS
# -------------------------------------------------------------------

variable "default_node_group_ami_type" {
  type        = string
  description = "AMI type of default node group"
  default     = "BOTTLEROCKET_x86_64"
}

variable "default_node_group_instance_type" {
  type        = string
  description = "Instance type of default node group"
  default     = "m5.large"
}

variable "default_node_group_nodes_count" {
  type        = number
  description = "Count of nodes in default node group"
  default     = 2
}

variable "default_node_group_capacity_type" {
  type        = string
  description = "Capacity type of default node group"
  default     = "ON_DEMAND"
}

variable "default_node_group_max_unavailable" {
  type        = number
  description = "Count of nodes which can be unavailable when performing a rolling update"
  default     = 1
}

variable "karpenter_nodepool_arch" {
  type        = string
  description = "Architecture of default karpenter nodepool nodes"
  default     = "amd64"
}

variable "karpenter_nodepool_capacity_type" {
  type        = string
  description = "Capacity type of default karpenter nodepool nodes"
  default     = "spot"
}

variable "aws_lb_replica_count" {
  type        = number
  description = "Count of replicas of aws-lb-controller"
  default     = 2
}

variable "aws_lb_pdb_max_unavailable" {
  type        = number
  description = "Count of max unavailable replicas for aws-lb-controller"
  default     = 1
}

# -------------------------------------------------------------------
# ECR
# -------------------------------------------------------------------

variable "ecr_repositories" {
  description = "List of ECR repositories to create"
  type        = list(string)
  default     = []
}

# -------------------------------------------------------------------
# RDS
# -------------------------------------------------------------------

variable "rds_engine" {
  type        = string
  description = "The database engine to use for the RDS instance (e.g., mysql, postgres)"
}

variable "rds_engine_version" {
  type        = string
  description = "The version of the database engine to use for the RDS instance. (e.g. for MySQL - 8.0.40; for PostgreSQL - 15)"
}

variable "rds_major_engine_version" {
  type        = string
  description = "The major version of the database engine (e.g. for MySQL - 8.0; for PostgreSQL - 15)"
}

variable "rds_family" {
  type        = string
  description = "The family of the database engine (e.g. for MySQL - mysql8.0; for PostgreSQL - postgres15)"
}

variable "rds_instance_class" {
  type        = string
  default     = "db.t3.micro"
  description = "The instance class for the RDS instance (e.g., db.t3.micro)"
}

# -------------------------------------------------------------------
# AURORA
# -------------------------------------------------------------------

variable "aurora_engine" {
  type        = string
  description = "The Aurora database engine to use (e.g. for MySQL - aurora-mysql; for PostgreSQL - aurora-postgresql)"
}

variable "aurora_engine_version" {
  type        = string
  description = "The version of the Aurora MySQL engine to use. (e.g. for MySQL - 8.0.mysql_aurora.3.08.0; for PostgreSQL - 15.8)"
}

variable "aurora_instance_class" {
  type        = string
  default     = "serverless.v2"
  description = "The instance class for the Aurora serverless database (e.g., serverless.v2)"
}

# -------------------------------------------------------------------
# OpenSearch
# -------------------------------------------------------------------

variable "domain_name" {
  type        = string
  description = "Domain name to use"
}

variable "opensearch_acm_certificate_arn" {
  type        = string
  description = "ACM certificate ARN for your custom endpoint. This variable is required if custom_endpoint_enabled is set to true."
  default     = ""
}

variable "opensearch_advanced_security_options_enabled" {
  type        = bool
  description = "Enable advanced security options."
  default     = true
}

variable "opensearch_availability_zone_count" {
  type        = number
  description = "Number of Availability Zones for the domain."
  default     = 3
}

variable "opensearch_custom_endpoint" {
  type        = string
  description = "Fully qualified domain for your custom endpoint. This variable is required if custom_endpoint_enabled is set to true."
  default     = ""
}

variable "opensearch_custom_endpoint_enabled" {
  type        = bool
  description = "Whether to enable custom endpoint for the Opensearch domain."
  default     = false
}

variable "domain_name" {
  type        = string
  description = "Name of the Opensearch domain."
  default     = "opensearch"
}

variable "opensearch_ebs_enabled" {
  type        = bool
  description = "Whether EBS volumes are attached to data nodes in the domain."
  default     = true
}

variable "opensearch_ebs_volume_type" {
  type        = string
  description = "Type of EBS volumes attached to data nodes."
  default     = "gp3"
}

variable "opensearch_ebs_volume_size" {
  type        = number
  description = "Size of EBS volumes attached to data nodes (in GiB)."
  default     = 64
}

variable "opensearch_encrypt_at_rest_enabled" {
  type        = bool
  description = "Enable encrypt at rest."
  default     = true
}

variable "opensearch_auto_software_update_enabled" {
  type        = bool
  description = "Enable auto software update. Defaults to 'true'"
  default     = true
}

variable "opensearch_enforce_https" {
  type        = bool
  description = "Whether or not to require HTTPS."
  default     = true
}

variable "opensearch_instance_count" {
  type        = number
  description = "Number of instances in the cluster."
  default     = 3
}

variable "opensearch_instance_type" {
  type        = string
  description = "Instance type of data nodes in the cluster."
  default     = "m7g.medium.search"
}

variable "opensearch_internal_user_database_enabled" {
  type        = bool
  description = "Enable internal user database."
  default     = true
}

variable "opensearch_master_user_name" {
  type        = string
  description = "Main user's username."
  default     = "admin"
}

variable "opensearch_master_user_password" {
  type        = string
  description = "Main user's passsword."
  default     = ""
}

variable "opensearch_node_to_node_encryption_enabled" {
  type        = bool
  description = "Enable node-to-node encryption."
  default     = true
}

variable "opensearch_version" {
  type        = string
  description = "Version of OpenSearch."
  default     = "OpenSearch_2.19"
}

variable "opensearch_zone_awareness_enabled" {
  type        = bool
  description = "Enable zone awareness with more Availability Zone."
  default     = true
}
