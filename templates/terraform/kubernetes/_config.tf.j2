terraform {
  required_version = "~> 1.11"

  {% if backend %}
  {% if backend.s3 %}
  backend "s3" {
    bucket         = "{{ backend.s3.bucket }}"
    key            = "kubernetes.tfstate"
    {% if backend.s3.dynamodb_table  %}
    dynamodb_table = "{{ backend.s3.dynamodb_table }}"
    {% endif %}
    region         = "{{ backend.s3.region }}"
    encrypt        = {{ backend.s3.encrypt | default(false) | lower}}
    {% if backend.s3.use_lockfile  %}
    use_lockfile   = {{ backend.s3.use_lockfile | default(false) | lower}}
    {% endif %}
  }

  {% endif %}
  {% endif %}
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = ">= 5.46"
    }
    helm = {
      source  = "hashicorp/helm"
      version = ">= 2.16"
    }
    kubernetes = {
      source  = "hashicorp/kubernetes"
      version = ">= 2.36.0"
    }
    kubectl = {
      source  = "gavinbunney/kubectl"
      version = ">= 1.19.0"
    }
  }
}

provider "aws" {
  region = var.region

  default_tags {
    tags = merge({
      "customer"  = "DevOpsGroup"
      "terraform" = "true"
    }, var.global_tags)
  }
}

provider "helm" {
  kubernetes {
    host                   = data.terraform_remote_state.aws.outputs.eks_cluster_endpoint
    cluster_ca_certificate = base64decode(data.terraform_remote_state.aws.outputs.eks_certificate_authority_data)
    token                  = data.aws_eks_cluster_auth.eks.token
  }
}

provider "kubernetes" {
  host                   = data.terraform_remote_state.aws.outputs.eks_cluster_endpoint
  cluster_ca_certificate = base64decode(data.terraform_remote_state.aws.outputs.eks_certificate_authority_data)
  token                  = data.aws_eks_cluster_auth.eks.token
}

provider "kubectl" {
  host                   = data.terraform_remote_state.aws.outputs.eks_cluster_endpoint
  cluster_ca_certificate = base64decode(data.terraform_remote_state.aws.outputs.eks_certificate_authority_data)
  token                  = data.aws_eks_cluster_auth.eks.token
}

data "aws_eks_cluster_auth" "eks" {
  name = data.terraform_remote_state.aws.outputs.eks_cluster_name
}
